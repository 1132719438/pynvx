language: cpp
sudo: required
dist: trusty
matrix:
  include:
  - os: linux
    env: PYTHON=2.7
         CUDA_VERSION="9.1.85_387.26"
  - os: linux
    env: PYTHON=3.4
         CUDA_VERSION="9.1.85_387.26"
  - os: linux
    env: CONDA=2.7
         CUDA_VERSION="9.1.85_387.26"
  - os: linux
    env: CONDA=3.6
         CUDA_VERSION="9.1.85_387.26"
before_install:
- |
  source ./script/install-cuda-trusty.sh

  if [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX=g++-4.8 CC=gcc-4.8; fi
  if [ -n "$PYTHON" ]; then
    pip install --user --upgrade pip virtualenv
    echo $PATH | grep -q "$HOME/.local/bin"
    if [ $? -eq 0 ]; then
      export PATH=$HOME/.local/bin:$PATH
    fi
    virtualenv -p python$PYTHON venv$PYTHON
    source venv$PYTHON/bin/activate
    pip install --upgrade pytest
  elif [ -n "$CONDA" ]; then
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then OS=Linux-x86_64; fi
    wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${CONDA:0:1}-latest-$OS.sh
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no
    conda config --add channels conda-forge
    conda update -q conda
    conda install -q conda-build
    conda create -q -n cvenv$CONDA python=$CONDA
    source activate cvenv$CONDA
    conda install -q pytest
  fi
install:
- |
  if [ -n "$PYTHON" ]; then
    python setup.py install
  elif [ -n "$CONDA" ]; then
    conda build conda.recipe
    conda install --use-local pynvx
  fi
script:
- |
  python -m pytest tests/test.py
