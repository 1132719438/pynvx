version: '{build}'
image: Visual Studio 2015
platform:
- x64
environment:
  matrix:
  - PYTHON: 27
    CUDA_VERSION: 9.0
  - PYTHON: 36
    CUDA_VERSION: 9.0
install:
- cmd: |
    call .\script\install-cuda-win.cmd %CUDA_VERSION%
- ps: |
    $env:PATH="$env:ProgramFiles\NVIDIA GPU Computing Toolkit\CUDA\v$env:CUDA_VERSION\bin;$env:PATH"
    $env:CUDA_PATH="$env:ProgramFiles\NVIDIA GPU Computing Toolkit\CUDA\v$env:CUDA_VERSION"
    $env:CUDA_BIN_PATH=$env:CUDA_PATH
    $env:CUDA_TOOLKIT_ROOT_DIR=$env:CUDA_PATH
    if ("$env:CUDA_VERSION" -eq "8.0") {
        $env:CUDA_PATH_V8_0="$env:ProgramFiles\NVIDIA GPU Computing Toolkit\CUDA\v8.0"
    } else {
        $env:CUDA_PATH_V9_0="$env:ProgramFiles\NVIDIA GPU Computing Toolkit\CUDA\v9.0"
    }

    git submodule update -q --init --recursive

    if ($env:PLATFORM -eq "x64") { $env:PYTHON = "$env:PYTHON-x64" }
    if ($env:PYTHON -eq "27") {
      $env:PYNVML = "nvidia-ml-py"
    } else {
      $env:PYNVML = "nvidia-ml-py3"
    }
    $env:PATH = "C:\Python$env:PYTHON\;C:\Python$env:PYTHON\Scripts\;$env:PATH"
    python -m pip install --no-warn-script-location --upgrade pip setuptools pytest $env:PYNVML
build_script:
- ps: |
    python setup.py install
test_script:
- ps: python -m pytest tests\test.py
